DRAW by Armando M. So III


 * Brief History *

     This program was created starting just this past September, 1998, out of frus-
tration because our C-programming subject then felt too complicated (all that
pointer, link-lists, and those sort of crap).  It made learning C even more
difficult for me, until I started trying out C's graphics functions, which
were exactly the same as in Turbo Pascal, so I started creating C programs for
the first time just by using all the graphics functions.  And I just ended up
making this program.  I came up with the idea because I was frustrated with
the lame graphics I could come up using just the basic C functions, so I fig-
ured just putting them all together so I could come up with drawing tools
that would provide me with enough flexibility to create the graphics that I
want.  Eventhough I made basic drawing routins using the mouse, it didn't
mean that the graphics will all be that stunning immediately.  Not only are
we limited to 16 colors as well as only 630x450 area of the screen (on default
VGA graphics mode), the level of sophistication of this application is not
that impressive either, just same lines of code repeated over and over again
within the program.  But to me, it's basically enough to start with, so if
you're still looking for more out of this or feels this program is just for
lamers (which I agree)..., THEN JUST PISS OFF, OKAY!!!

------------------------------------------------------------------------------

 * Features *

     DRAW provides tools for free-hand drawing, drawing lines, polygons, circles,
ellipses, and rectangles, and color fills.  It uses all the 16 colors in the
640x480 VGA Graphics Mode, and some of the basic graphics routines of Turbo
C++ 3.0.  Size of the rectangle containing the graphics you created, or
canvas, consists of 1 or more blocks, each block is 40x30 pixels in area,
which allows you to save rectangular images from the single block of 40x30 
pixels in area to (16x40)x(15x30) pixels.

------------------------------------------------------------------------------

 * Using the mouse *

Drawing lines, circles, ellipses, and rectangles are as simple as holding down
the left mouse button, and dragging the mouse  anywhere on the screen, except
above the menu bar at the top of the screen, and releasing the button.

In drawing polygon shapes, you click the left mouse button on a starting point
on the screen, then you can draw series of lines by just clicking the left
button again.  To end drawing the series of lines, just click the right-mouse
button, or click on another drawing routine.

You can select the foreground color on the color palette on the upper left
corner of the screen by clicking on the color with the left-mouse button.

To select a background color (for color fills) use the right-mouse button.

The FILL button lets you fill a bounded area on the canvas.

IMPORTANT NOTE: Because as I've said, this program is really not that very
sophisticated, you can only fill an area as long as it is bounded by the
current foreground color, which means filling a region bounded by white pixels
and the current foreground color is other than white, you will not like the
result (Tingnan mo na lang kung anong mangyayari and you'll know what I mean).

To clear the canvas, just click on CLR on the menu bar.

The TAPAL button allows you to patch a portion of the canvas with the current
foreground color.  You'll use this as your eraser, but accidentally, it can
also be used as pen-point, for free-hand drawing.

The STYL3 button lets you choose the shape and size of your pen-point.

The STYL2 button lets you select one of C's fillpatterns.  To create your
own user-defined fill pattern, type 12 on Pattern Type.

The PALET button lets you change the RGB composition of one of the 16 colors
in the palette.

The STYL1 button lets you select one of C's linestyles.  To create your own
user-defined line pattern, type 4 on Line Type.

The SELC button lets you select a rectangular region and make a copy and paste
on the selection.  Hold down the left mouse button while selecting the region
and use the right button to paste the selection.

IMPORTANT NOTE: I still haven't fixed a glitch on this procedure (because I
just feel lazy really, that's it) and selecting a region larger than 300x300
pixels (I think...)  would cause, guess what, your computer to hang, so be sure
the selection doesn't have to be that large, which ussually isn't in my case.

------------------------------------------------------------------------------

 * Creating,Opening, and Saving graphics files *

     To create a new graphics file, click NEW and enter the number of horizontal
and vertical blocks for the size canvas.  A 1x1 canvas size of 40x30 pixels.

     To open an image file, just click OPEN and enter the filename.  The image file
must have an extension TPI (just a precautionary measure really, because you
can get a very nasty result just opening any file as an image file).

To save your graphics, click on SAVE and enter the filename.

 * The VIEW.EXE *

VIEW.EXE is for viewing a .TPI file.  It's just a piece of junk for getting
a quick view of the junk you created.

------------------------------------------------------------------------------

     Just would like to give credit to ZAMCELCO for providing me with continouous
supply of electricity while I warm my butt coding, our household for some
snacks when I go hungry, and my electric fan during those warm and humid days
while wasting time on lame programming.

     Kay Raylan pa pala, thanks for letting me pirate some of your code (he,he,he).
Don't know what to do without you.


