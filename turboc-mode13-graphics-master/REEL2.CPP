#include <dir.h>
#include <mem.h>
#include <stdio.h>
#include <stdlib.h>
#include <dos.h>
#include <alloc.h>
#include <conio.h>

#include "xmslib.h"
#include "grlib.h"


#define LINES 10
#define MAXFRAMES 19
#define screen_width  320
#define screen_height 200

char far *off_page,
     *file[MAXFRAMES]={"FRAME1.SO",
                       "FRAME2.SO",
                       "FRAME3.SO",
                       "FRAME4.SO",
                       "FRAME5.SO",
                       "FRAME6.SO",
                       "FRAME7.SO",
		       "FRAME8.SO",
                       "FRAME9.SO",
                       "FRAME10.SO",
                       "FRAME11.SO",
                       "FRAME12.SO",
                       "FRAME13.SO",
		       "FRAME14.SO",
                       "FRAME15.SO",
                       "FRAME16.SO",
                       "FRAME17.SO",
                       "GARFIELD.SO",
                       "EARTH.SO"};

int _width[MAXFRAMES]={167,
                      298,
                      320,
		      284,
                      220,
                      320,
                      274,
                      266,
                      320,
                      167,
                      167,
                      201,
                      320,
		      320,
                      320,
                      320,
                      320,
                      276,
                      320};

void prewrite(unsigned char far *spr, int x, int y,int width,int height) {
   unsigned char far *p;
   _fmemset(off_page,0,64000u);
   p=off_page + y*screen_width + x;
   while ( height-- ){
     _fmemcpy(p, spr, width); // copy one line of sprite to off_screen
     spr+=width;	 // move to next line in sprite
     p+=screen_width;			 // move to next line on screen
  }
}

	void checkfiles()	{
		int ctr,count=0;
		struct ffblk fblk;

		for (ctr=0;ctr<=MAXFRAMES-1;ctr++) {
			if ((findfirst(file[ctr],&fblk,0))!=0){
				printf("\nFile not found : %s",file[ctr]);
				count++;
			}
		}
		if (count != 0)	{
			printf("\n%d files are missing on the current directory",count);
			printf("\nError running program.");
			exit(-1);
		}
	}


void exitmain(char* exmess,unsigned int retval) {
  printf("\n%s",exmess);
  exit (retval);
}

void show()
{
	_fmemcpy(VGAMEM,BUFFER,64000);
}


void main(void) {
  unsigned char *palette;
  unsigned int lines,
	       saved,
	       remain,
	       count;

  char far *frame,
       far *buff,
       far*t,
       key,index=0;
  unsigned int handle[MAXFRAMES];

  checkfiles();

  off_page=(char far*)farmalloc(64000u);
  if (!off_page) {
     printf("\nOut of memory.");
     return;
  }
  if (!InitXMS()) exitmain("\nXMS driver not loaded.",-1);
  for (index=0;index  < MAXFRAMES; index++) {
    frame=LoadFileData(file[index]);
    if (!frame) exitmain("Error loading file.",-1);
    handle[index]=AllocXMS(64);
    if (!handle[index]) exitmain("Error allocating extended memory.",-1);
    StoreXMS(handle[index],frame,0,64000);
    farfree(frame);
  }
  InitGraphics();
  LoadPalette("PALETTE.SO");
  SetPalette();
  index=0;
  frame=(char far*)farmalloc(64000u);
  LoadXMS(handle[index],frame,0,64000u);
  PutBitmap(frame,0,0,_width[index],200);
  show();

  farfree(frame);
  index++;
  frame=(char far*)farmalloc(64000u);
  LoadXMS(handle[index],frame,0,64000u);
  prewrite(frame,0,0,_width[index],200);

  lines=LINES;
  saved=320*lines;
  remain=64000u-saved;
  buff=(char far*)farmalloc(saved);
  t=(char far*)farmalloc(remain);
  if (!buff) {
    printf("Error 1");
    exit(1);
  }
  if (!t) {
    printf("Error 2");
    exit(1);
  }

  count=200;
  getch();
  while (1) {
     if (count==0) {
       farfree(frame);
       off_page-=64000u;
       count=200;
       index++;
       key=getch();
       if (key==13) break;
       if (index == MAXFRAMES) index=0;
       frame=(char far*)farmalloc(64000u);
       LoadXMS(handle[index],frame,0,64000u);
       prewrite(frame,0,0,_width[index],200);
     }
     _fmemcpy(buff,off_page,saved);
     _fmemcpy(BUFFER,BUFFER+saved,remain);
     _fmemcpy(BUFFER+remain,buff,saved);
     show();
     off_page+=saved;
     count-=lines;
  }
  for (index=0;index < MAXFRAMES;index++) FreeXMS(handle[index]);
  farfree(t);
  farfree(buff);
  CloseGraphics();
}


